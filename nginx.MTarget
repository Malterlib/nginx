
Property
{
	NgnixTargetGroup define string?
	NgnixTargetBaseName define string?
}

%Target "Exe_nginx"
{
	Include "nginx_Options.MHeader"
	Include "nginx_Modules.MHeader"
	Include "nginx_Sources.MHeader"
	Include "nginx_ModulesCalc.MHeader"

	///
	/// Settings
	/// ========
	Property
	{
		MalterlibLinkWithBoringSSL true
		ProductName "NGINX"
	}
	Target
	{
		GenerateScheme false
		{
			!!GeneratorFamily "Xcode"
		}
		Type "ConsoleExecutable"
		BaseName "nginx"
		BaseName NgnixTargetBaseName
		{
			!NgnixTargetBaseName ""
		}
		FileName "nginx"
		Group NgnixTargetGroup
		{
			!NgnixTargetGroup undefined
		}
		CharacterSet "MultiByte"
		{
			!!PlatformFamily "Windows"
		}
		LinkWithLibraries += "-lcrypt"
		{
			!!PlatformFamily "Linux"
		}
	}
	Compile
	{
		!!CompileDialect "C"
		PrefixHeader undefined
		SearchPath += "../pcre"->MakeAbsolute()
		{
			!!USE_PCRE true
		}
		SearchPath += "src/core"->MakeAbsolute()
		SearchPath += "src/os/unix"->MakeAbsolute()
		{
			!PlatformFamily "Windows"
		}
		SearchPath += "src/os/win32"->MakeAbsolute()
		{
			!!PlatformFamily "Windows"
		}
		SearchPath += "src/event"->MakeAbsolute()
		SearchPath += "src/event/modules"->MakeAbsolute()
		SearchPath += "src/http"->MakeAbsolute()
		SearchPath += "src/http/v2"->MakeAbsolute()
		SearchPath += "src/http/modules"->MakeAbsolute()
		SearchPath += "../../External/zlib"->MakeAbsolute()

		Warnings_DeprecatedDeclarations false
		{
			!!GeneratorFamily "Xcode"
		}

		CLanguage "C99"
		{
			&
			{
				PlatformFamily "Linux"
				Compile.Type "C"
			}
		}
		PreprocessorDefines += ["_FILE_OFFSET_BITS=64", "_GNU_SOURCE", "_LARGEFILE_SOURCE"]
		{
			&
			{
				PlatformFamily "Linux"
				Compile.Type "C"
			}
		}
	}
	%Group "Source"
	{
		%File "Malterlib_nginx.cpp"
		%Group "Modules"
		{
			%GenerateFile "ngx_modules.c"
			{
				Property
				{
					ExternModuleDefinesTemplate function(string _Module) string = ""
					ExternModuleDefinesTemplate =+ `extern ngx_module_t @(_Module);\n`
					{
						!_Module ""
					}

					ModuleArrayContentsTemplate function(string _Module) string = ""
					ModuleArrayContentsTemplate =+ `\t&@(_Module),\n`
					{
						!_Module ""
					}

					ModuleNamesArrayContentsTemplate function(string _Module) string = ""
					ModuleNamesArrayContentsTemplate =+ `\t@(_Module->Escape()),\n`
					{
						!_Module ""
					}
				}

				GenerateFile
				{
					Name `@(GeneratedDirectory)ngx_modules.c`
					Contents	`#include <ngx_config.h>\n`\
								`#include <ngx_core.h>\n`\
								`\n`\
								`@(modules->ForEach("ExternModuleDefinesTemplate"))\n`\
								`\n`\
								`ngx_module_t *ngx_modules[] = {\n`\
								`@(modules->ForEach("ModuleArrayContentsTemplate"))`\
								`\tNULL\n`\
								`};\n`\
								`\n`\
								`char *ngx_module_names[] = {\n`\
								`@(modules->ForEach("ModuleNamesArrayContentsTemplate"))`\
								`\tNULL\n`\
								`};\n`\
								`\n`


					UnixLineEnds ScriptUnixLineEnds
					UnicodeBOM true
				}
			}
		}
		%Group "Config"
		{
			Property
			{
				HaveFeatureDefinesLineTemplate function(string _Name, string? _Value) string
				HaveFeatureDefinesLineTemplate `#define @(_Name) 1`
				{
					|
					{
						_Value ""
						_Value undefined
					}
				}
				HaveFeatureDefinesLineTemplate `#define @(_Name) @(_Value)`
				{
					&
					{
						!_Value ""
						!_Value undefined
					}
				}
				HaveFeatureDefinesTemplate function(string _Feature) string
				HaveFeatureDefinesTemplate =+ `@(HaveFeatureDefinesLineTemplate(_Feature->Split("=")...))\n`
				{
					!_Feature ""
				}
			}
			%GenerateFile "ngx_auto_headers.h"
			{
				GenerateFile
				{
					Name `@(GeneratedDirectory)ngx_auto_headers.h`
					Contents	`@(have_headers->ForEach("HaveFeatureDefinesTemplate"))\n`

					UnixLineEnds ScriptUnixLineEnds
					UnicodeBOM true
				}
			}
			%GenerateFile "ngx_auto_config.h"
			{
				GenerateFile
				{
					Name `@(GeneratedDirectory)ngx_auto_config.h`
					Contents	`@(have->ForEach("HaveFeatureDefinesTemplate"))\n\n\n\n`\
								`#define NGX_PREFIX  "./"\n`\
								`#define NGX_CONF_PREFIX  "conf/"\n`\
								`#define NGX_SBIN_PATH  ""\n`\
								`#define NGX_CONF_PATH  "conf/nginx.conf"\n`\
								`#define NGX_PID_PATH  "logs/nginx.pid_"\n`\
								`#define NGX_LOCK_PATH  "logs/nginx.lock"\n`\
								`#define NGX_ERROR_LOG_PATH  "logs/error.log_"\n`\
								`#define NGX_HTTP_LOG_PATH  "logs/access.log"\n`\
								`#define NGX_HTTP_CLIENT_TEMP_PATH  "client_body_temp"\n`\
								`#define NGX_HTTP_PROXY_TEMP_PATH  "proxy_temp"\n`\
								`#define NGX_HTTP_FASTCGI_TEMP_PATH  "fastcgi_temp"\n`\
								`#define NGX_HTTP_UWSGI_TEMP_PATH  "uwsgi_temp"\n`\
								`#define NGX_HTTP_SCGI_TEMP_PATH  "scgi_temp"\n`\
								`#define NGX_USER  @(NGX_USER->Escape())\n`\
								`#define NGX_GROUP  @(NGX_GROUP->Escape())\n`

					UnixLineEnds ScriptUnixLineEnds
					UnicodeBOM true
				}
			}
		}
		%Group "Core"
		{
 			%File "src/core/*.c"
			{
				Compile.Disabled true
			}
			%File "src/core/*.h"
 			%File "src/event/*.c"
			{
				Compile.Disabled true
			}
			%File "src/event/*.h"
 			%File "src/event/modules/*.c"
			{
				Compile.Disabled true
			}
			%File "src/event/modules/*.h"
 			%File "src/os/unix/*.c"
			{
				Compile.Disabled true
			}
			%File "src/os/unix/*.h"
 			%File "src/os/win32/*.c"
			{
				Compile.Disabled true
			}
			%File "src/os/win32/*.h"
			%File [CORE_SRCS..., EVENT_SRCS...]
			{
				Compile.Disabled false
			}
		}
		%Group "HTTP"
		{
			!!HTTP true
			%File "src/http/*.c"
			{
				Compile.Disabled true
			}
			%File "src/http/*.h"
			%File "src/http/modules/*.c"
			{
				Compile.Disabled true
			}
			%File "src/http/modules/*.h"
			%File "src/http/modules/perl/*.c"
			{
				Compile.Disabled true
			}
			%File "src/http/modules/perl/*.h"
			%File HTTP_SRCS
			{
				Compile.Disabled false
			}
		}
		%Group "Mail"
		{
			!!MAIL true
			%File "src/mail/*.h"
			%File "src/mail/*.c"
			{
				Compile.Disabled true
			}
			%File MAIL_SRCS
			{
				Compile.Disabled false
			}
		}
		%Group "Misc"
		{
			%File NGX_MISC_SRCS
		}
		%Group "auto"
		{
			%File "auto/*"
			%Group "os"
			{
				%File "auto/os/*"
			}
			%Group "cc"
			{
				%File "auto/cc/*"
			}
			%Group "lib"
			{
				%File "auto/lib/*"
				%Group "geoip"
				{
					%File "auto/lib/geoip/*"
				}
				%Group "google-perftools"
				{
					%File "auto/lib/google-perftools/*"
				}
				%Group "libatomic"
				{
					%File "auto/lib/libatomic/*"
				}
				%Group "libgd"
				{
					%File "auto/lib/libgd/*"
				}
				%Group "libxslt"
				{
					%File "auto/lib/libxslt/*"
				}
				%Group "openssl"
				{
					%File "auto/lib/openssl/*"
				}
				%Group "pcre"
				{
					%File "auto/lib/pcre/*"
				}
				%Group "perl"
				{
					%File "auto/lib/perl/*"
				}
				%Group "zlib"
				{
					%File "auto/lib/zlib/*"
				}
			}
			%Group "types"
			{
				%File "auto/types/*"
			}
		}
	}

	%Dependency "Lib_zlib"
	%Dependency "Lib_pcre"
	%Dependency "Lib_Malterlib"
}
